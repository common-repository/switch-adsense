<?phpif ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly;

/*	Plugin Name: Switch Adsense	Plugin URI: https://www.ino-kawa.com/?page_id=1302	Description: Switch adsense on post/page	Version: 1.0.1	Author: Atsushi Higuchi	Author URI: https://www.ino-kawa.com	License: GPL2    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License, version 2, as	published by the Free Software Foundation.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA*/global $adsense_script_default_url;global $asw_adsense_removed;$adsense_script_default_url = '//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js';$asw_adsense_removed = FALSE;/* Init DB field when plugin is activated */function adsense_switch_init_option(){	if(!get_option('adsense_script_url'))	{		add_option('adsense_script_url', '');	}}register_activation_hook(__FILE__, 'adsense_switch_init_option');/* Settings in admin page */add_action('admin_menu', 'adsense_switch');function adsense_switch(){	add_options_page('Adsense Switch', 'Adsense Switch', 'manage_options', __FILE__, 'adsense_switch_settings');}function adsense_switch_settings(){	if(isset($_POST['adsense_switch_update']) && $_POST["action"] == "update")	{		if(!check_admin_referer('adsense_switch_action')) die( 'Failed security check' );		update_option('asw_adsense_script_url', esc_url_raw($_POST['asw_adsense_script_url']));		update_option('asw_disable_all_pages', ($_POST['asw_disable_all_pages']==1)?'1':'0');		update_option('asw_disable_all_posts', ($_POST['asw_disable_all_posts']==1)?'1':'0');		update_option('asw_cat_options', adsense_switch_sanitize_array_field($_POST['asw_cat_options']));		echo '<div class="updated"><p><strong>Saved settings.</strong></p></div>';	}	global $adsense_script_default_url;	?>	<div class="wrap">		<h2>Adsense Switch Settings</h2>		<form method="post">			<?php wp_nonce_field('update-options'); ?>			<table class="form-table">				<tr>					<th>Adsense Script URL: </th>					<td><input type="text" id="asw_adsense_script_url" name="asw_adsense_script_url" class="regular-text" value="<?php echo esc_url(get_option('asw_adsense_script_url', $adsense_script_default_url)); ?>" />					<p>Do not change this unless you know you are using different URL.</p>					</td>				</tr>				<tr>					<th>Disable Adsense for All Pages</th>					<td><input type="checkbox" name="asw_disable_all_pages" id="asw_disable_all_pages" value="1" <?php echo (get_option('asw_disable_all_pages')==1)?'checked=checked':'' ?>><label for="asw_disable_all_pages">Disable Adsense</label>					<p>This option has more priority than individual page settings.</p>					</td>				</tr>				<tr>					<th>Disable Adsense for All Posts</th>					<td><input type="checkbox" name="asw_disable_all_posts" id="asw_disable_all_posts" value="1" <?php echo (get_option('asw_disable_all_posts')==1)?'checked=checked':'' ?>><label for="asw_disable_all_posts">Disable Adsense</label>					<p>This option has more priority than category and individual post settings.</p>					</td>				</tr>				<tr>					<th>Disable Adsense with Category: </th>					<td>						<?php						$cats = get_terms('category');						if(!empty($cats))						{							$selected_categories = get_option('asw_cat_options');							foreach($cats as $cat)							{								$checked = '';								if(!empty($selected_categories))								{									if(in_array($cat->term_id, $selected_categories))									{										$checked = 'checked=checked';									}								}								echo '<input type="checkbox" name="asw_cat_options[]" id="cat_'.esc_html($cat->term_id).'" value="'.esc_html($cat->term_id).'" '.$checked.'><label for="cat_'.esc_html($cat->term_id).'">'.esc_html($cat->name).'</label><br>';							}						}						?>						<p>Disable all posts with selected categories. This option has more priority than individual post/page settings.</p>					</td>				</tr>			</table>			<input type="hidden" name="action" value="update" />			<p class="submit">				<input type="submit" class="button-primary" name="adsense_switch_update" value="<?php _e('Save Changes') ?>" />			</p>			<?php wp_nonce_field('adsense_switch_action'); ?>		</form>	</div><?php}/* Settings in post page */add_action('add_meta_boxes', 'adsense_switch_add_meta_box');function adsense_switch_add_meta_box(){	$screens = array('post', 'page');	foreach($screens as $screen)	{		add_meta_box(				'layers_child_meta_sectionid',				__('Switch Adsense', 'adsenseswitchwp'),				'adsense_switch_meta_box_callback',				$screen,				'side',				'default'				);	}}function adsense_switch_meta_box_callback($post){	wp_nonce_field('adsense_switch_meta_box', 'adsense_switch_meta_box_nonce');		$disable_adsense = get_post_meta($post->ID, 'disable_adsense', true);		$checked = ($disable_adsense==1)?'checked=checked':'';		echo '<p>';	echo '<input type="checkbox" name="disable_adsense" id="disable_adsense" value="1" '.$checked.'>';	echo '<label for="disable_adsense">'.__('Disable Adsense', 'adsenseswitchwp').'</label> ';	echo '</p>';}add_action('save_post', 'adsense_switch_save_meta_box_data');function adsense_switch_save_meta_box_data( $post_id ){	$is_autosave = wp_is_post_autosave($post_id);	$is_revision = wp_is_post_revision($post_id);		$is_valid_nonce = (isset($_POST['adsense_switch_meta_box_nonce']) && wp_verify_nonce($_POST[ 'adsense_switch_meta_box' ], basename(__FILE__))) ? 'true' : 'false';		if($is_autosave || $is_revision || !$is_valid_nonce)	{		return;	}		if(isset($_POST['disable_adsense']))	{		update_post_meta($post_id, 'disable_adsense', ($_POST['disable_adsense']==1)?'1':'');	}	else	{		update_post_meta($post_id, 'disable_adsense', '');	}}add_action( 'wp', 'adsense_switch_set_asw_adsense_removed' );function adsense_switch_set_asw_adsense_removed(){	if(adsense_switch_get_status())	{		global $asw_adsense_removed;		$asw_adsense_removed = TRUE;	}}/* Check if ad is enabled or disabled on this post/page */function adsense_switch_get_status(){	$post = get_post();		if(is_page($post))	{		$disable_page_post = get_option('asw_disable_all_pages');	}	else if(is_single($post))	{		$disable_page_post= get_option('asw_disable_all_posts');	}		$disable_adsense = get_post_meta($post->ID, 'disable_adsense', true);	$ad_disabled_categories = get_option('asw_cat_options');		if($disable_page_post== 1 || $disable_adsense == 1 || in_category($ad_disabled_categories, $post))	{		return TRUE;	}	return FALSE;}/* Remove Adsense script in post/page */add_action('shutdown', function() {	if(adsense_switch_get_status())	{		$final = '';				$levels = ob_get_level();				for($i=0; $i<$levels; $i++)		{			$final .= ob_get_clean();		}				echo apply_filters('final_output', $final);	}}, 0);add_filter('final_output', function($output) {	$asw_adsense_script_url = get_option('asw_adsense_script_url');		if(empty($asw_adsense_script_url))	{		global $adsense_script_default_url;		$asw_adsense_script_url = $adsense_script_default_url;	}		return str_replace('src="'.$asw_adsense_script_url.'"', '', $output);});function get_adsense_switch_ad_removed(){	global $asw_adsense_removed;	return $asw_adsense_removed;}add_shortcode('get_adsense_switch_ad_removed', 'get_adsense_switch_ad_removed');/* Sanitize all text in array */function adsense_switch_sanitize_array_field($array){	foreach($array as $key => &$value)	{		if(is_array($value))		{			$value = adsense_switch_sanitize_array_field($value);		}		else		{			$value = sanitize_text_field($value);		}	}		return $array;}?>